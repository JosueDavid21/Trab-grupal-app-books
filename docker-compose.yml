version: '3'
services:
  proxy:
    image: traefik:v2.9.6
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    expose:
      - 80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  neo4j:
    image: neo4j/neo4j-3.5-browser-4.1.2
    ports:
      - 7474:7474
      - 7687:7687
    environment:
      - NEO4J_AUTH=neo4j/neo4j

  postgres-sql:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: distribuida
    ports:
      - 5432:5432

  authors-service:
    image: josued21/app-authors:1.0.0
    expose:
      - 8000
    deploy:
      replicas: 2
    environment:
      - DATABASE_NAME=distribuida
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=postgres-sql
      - DATABASE_PORT=5432
    depends_on:
      - postgres-sql
    labels:
      - "traefik.http.routers.authors.rule=PathPrefix(`/app2`)"
      - "traefik.http.middlewares.authors.stripprefix.prefixes=/app2"
      - "traefik.http.routers.authors.middlewares=authors"

  book-service:
    image: josued21/app-books:1.0.0
    expose:
      - 9000
    deploy:
      replicas: 3
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=neo4j
      - NEO4J_DATABASE=neo4j
      - SERVER_PORT=9000
    labels:
      - "traefik.http.routers.books.rule=PathPrefix(`/app1`)"
      - "traefik.http.middlewares.books.stripprefix.prefixes=/app1"
      - "traefik.http.routers.books.middlewares=books"
    depends_on:
      - neo4j
